webpackJsonp([0x9be18369ae6f],{371:function(n,s){n.exports={data:{markdownRemark:{html:'<p>This is a project I became interested in a long time ago.  I have been in Boston for over 12 years, and knew that Boston was built over time from a sequence of landfill projects.  I was interested in creating an app that allowed the user to scrub through time and see what parts of Boston were changed and when.  </p>\n<p>After a little bit of digging, I found the best dataset <a href="http://www.bc.edu/bc_org/avp/cas/fnart/fa267/sequence.html">here</a>, a crappy GIF.  I probably could have emailed the professor for something of higher quality, but since I am always up for a challenge, I wanted to use this to practice a variety of skills:</p>\n<ul>\n<li>Understand GIFs in Python</li>\n<li>Some basic image processing: dilation/erosion, thresholding, smoothing, etc.</li>\n<li>Extract contours/shapes from an image</li>\n<li>Shape manipulations: merging, intersection</li>\n<li>SVG creation</li>\n<li>GeoJSON creation</li>\n<li>Interactive React App with GeoJSON objects</li>\n<li>React App for timelines, and other Interactive elements</li>\n</ul>\n<h2 id="data"><a href="#data" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Data</h2>\n<p>Original data was sourced here, a GIF image: <a href="http://www.bc.edu/bc_org/avp/cas/fnart/fa267/sequence.html">http://www.bc.edu/bc_org/avp/cas/fnart/fa267/sequence.html</a></p>\n<h2 id="key-lessons-learned"><a href="#key-lessons-learned" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Key Lessons Learned</h2>\n<h3 id="read-gif-in-python"><a href="#read-gif-in-python" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Read GIF in Python</h3>\n<p>A colored GIF is just a <code class="language-text">F x M x N x C</code> tensor, where <code class="language-text">F</code> is the number of frames, <code class="language-text">M</code> and <code class="language-text">N</code> are the height and width, and <code class="language-text">C=3</code> are the 3 RGB channels.</p>\n<p>Easy to read image (and make Greyscale):</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">from</span> skimage<span class="token punctuation">.</span>io <span class="token keyword">import</span> imread\n<span class="token keyword">from</span> skimage<span class="token punctuation">.</span>color <span class="token keyword">import</span> rgb2gray\n\nimage <span class="token operator">=</span> rgb2gray<span class="token punctuation">(</span>imread<span class="token punctuation">(</span><span class="token string">\'img.gif\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h3 id="basic-image-processing"><a href="#basic-image-processing" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Basic Image Processing</h3>\n<h4 id="resizing"><a href="#resizing" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Resizing</h4>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">from</span> skimage<span class="token punctuation">.</span>transform <span class="token keyword">import</span> resize <span class="token keyword">as</span> resize_image\n\nimage <span class="token operator">=</span> resize_image<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h4 id="slight-blur"><a href="#slight-blur" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Slight blur</h4>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">from</span> skimage<span class="token punctuation">.</span>filters <span class="token keyword">import</span> gaussian\n\nimage <span class="token operator">=</span> gaussian<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h4 id="thresholding"><a href="#thresholding" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Thresholding</h4>\n<p>I used <code class="language-text">threshold_minimum</code> which is described as: The histogram of the input image is computed and smoothed until there are only two maxima. Then the minimum in between is the threshold value.</p>\n<p>It is described in more detail <a href="http://scikit-image.org/docs/dev/auto_examples/xx_applications/plot_thresholding.html#bimodal-histogram">here</a></p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python">threshold <span class="token operator">=</span> threshold_minimum<span class="token punctuation">(</span>rimage<span class="token punctuation">)</span>\n\nbinary <span class="token operator">=</span> <span class="token punctuation">(</span>image <span class="token operator">></span> threshold<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>\n  <span class="token comment"># binary = binary_dilation(binary)</span>\n\n  <span class="token keyword">return</span> binary</code></pre>\n      </div>\n<h4 id="erosiondilation"><a href="#erosiondilation" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Erosion/Dilation</h4>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">from</span> skimage<span class="token punctuation">.</span>morphology <span class="token keyword">import</span> binary_dilation<span class="token punctuation">,</span> binary_erosion\n\nimage <span class="token operator">=</span> binary_dilation<span class="token punctuation">(</span>image<span class="token punctuation">)</span></code></pre>\n      </div>\n<h3 id="get-contours-from-image"><a href="#get-contours-from-image" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Get contours from image</h3>\n<p>This creates contours where image = 0. Since we created a binary image with thresholding, this is easy.</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">from</span> skimage <span class="token keyword">import</span> measure\n\ncontours <span class="token operator">=</span> measure<span class="token punctuation">.</span>find_contours<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h3 id="contour-to-shapes"><a href="#contour-to-shapes" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Contour to Shapes</h3>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">from</span> shapely<span class="token punctuation">.</span>geometry <span class="token keyword">import</span> Polygon\n\npolygon <span class="token operator">=</span> Polygon<span class="token punctuation">(</span>c<span class="token punctuation">)</span></code></pre>\n      </div>\n<h3 id="simplify-shapes"><a href="#simplify-shapes" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Simplify shapes</h3>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python">p <span class="token operator">=</span> polygon<span class="token punctuation">.</span>simplify<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">,</span> preserve_topology<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<h3 id="convert-contours-to-svg"><a href="#convert-contours-to-svg" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Convert contours to SVG</h3>\n<p>In order to convert Shapely shapes to SVG, I manually built my own SVG path elements, similar to this:</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python">path <span class="token operator">=</span> svgwrite<span class="token punctuation">.</span>path<span class="token punctuation">.</span>Path<span class="token punctuation">(</span><span class="token punctuation">)</span>\next_points <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>shape<span class="token punctuation">.</span>exterior<span class="token punctuation">.</span>coords<span class="token punctuation">)</span>\n\nP <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'M\'</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>ext_points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>ext_points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'L\'</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> ext_points<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'Z\'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token punctuation">[</span>path<span class="token punctuation">.</span>push<span class="token punctuation">(</span><span class="token operator">*</span>x<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> P<span class="token punctuation">]</span>\n\n<span class="token keyword">for</span> interior <span class="token keyword">in</span> shape<span class="token punctuation">.</span>interiors<span class="token punctuation">:</span>\n    int_points <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>interior<span class="token punctuation">.</span>coords<span class="token punctuation">)</span>\n\n    P <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'M\'</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>int_points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>int_points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'L\'</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> int_points<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'Z\'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n    <span class="token punctuation">[</span>path<span class="token punctuation">.</span>push<span class="token punctuation">(</span><span class="token operator">*</span>x<span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> P<span class="token punctuation">]</span></code></pre>\n      </div>\n<h3 id="convert-svg-to-polygons"><a href="#convert-svg-to-polygons" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Convert SVG to Polygons</h3>\n<p>In order to convert Shapely shapes to SVG, I manually built my own SVG path elements, similar to this:</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">from</span> shapely<span class="token punctuation">.</span>geometry <span class="token keyword">import</span> Polygon<span class="token punctuation">,</span> MultiPolygon\n<span class="token keyword">from</span> xml<span class="token punctuation">.</span>dom <span class="token keyword">import</span> minidom<span class="token punctuation">,</span> Node\n<span class="token keyword">from</span> svg<span class="token punctuation">.</span>path <span class="token keyword">import</span> parse_path <span class="token keyword">as</span> parse_svg_path\n\nsvg_doc <span class="token operator">=</span> minidom<span class="token punctuation">.</span>parse<span class="token punctuation">(</span><span class="token string">"data/svg_out.svg"</span><span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">parse_path</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    points <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>start<span class="token punctuation">.</span>real<span class="token punctuation">,</span> x<span class="token punctuation">.</span>start<span class="token punctuation">.</span>imag<span class="token punctuation">)</span><span class="token punctuation">,</span> parse_svg_path<span class="token punctuation">(</span>path<span class="token punctuation">.</span>getAttribute<span class="token punctuation">(</span><span class="token string">\'d\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> points\n\npoints <span class="token operator">=</span> parse_path<span class="token punctuation">(</span>svg_doc<span class="token punctuation">.</span>getElementsByTagName<span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\nPolygon<span class="token punctuation">(</span>points<span class="token punctuation">)</span></code></pre>\n      </div>\n<h3 id="convert-polygons-to-geojson"><a href="#convert-polygons-to-geojson" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Convert Polygons to GeoJSON</h3>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">from</span> shapely<span class="token punctuation">.</span>geometry <span class="token keyword">import</span> mapping\n<span class="token keyword">import</span> json\n\nout <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"FeatureCollection"</span><span class="token punctuation">,</span>\n    <span class="token string">"features"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            <span class="token string">"type"</span><span class="token punctuation">:</span> <span class="token string">"Feature"</span><span class="token punctuation">,</span>\n            <span class="token string">"properties"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token string">"layer"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">"region"</span><span class="token punctuation">:</span> <span class="token string">"logan_airport"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token string">"geometry"</span><span class="token punctuation">:</span> mapping<span class="token punctuation">(</span>shape<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>        \n<span class="token punctuation">}</span>\n\njson<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>out<span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">\'test.geojson\'</span><span class="token punctuation">,</span> <span class="token string">\'w\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>\n      </div>',frontmatter:{title:"Boston Landfill",startDate:"2017-10-06",endDate:"2017-10-23",repoURL:"https://github.com/dvreed77/boston_landfill",projectURL:"https://dvreed77.github.io/boston_landfill/",images:[{publicURL:"/dvreed.com/static/boston-landfill-60905d0ced07df3d6eecfa2ea1ea9220.png"}]},fields:{path:"projects/boston-landfill.md",slug:"/projects/boston-landfill.html"}}},pathContext:{slug:"/projects/boston-landfill.html"}}}});
//# sourceMappingURL=path---projects-boston-landfill-html-07f6c5e40fc2c0435576.js.map