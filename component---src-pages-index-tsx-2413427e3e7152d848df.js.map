{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["Home","data","console","log","posts","allPosts","edges","projects","allProjects","className","map","project","node","key","id","to","fields","slug","imgStyle","objectFit","fluid","frontmatter","images","childImageSharp","title","startDate","post","date","pageQuery"],"mappings":"2FAAA,+JAKe,SAASA,EAAT,GAAwB,IAARC,EAAQ,EAARA,KAC7BC,QAAQC,IAAIF,GADyB,IAEtBG,EAAUH,EAAKI,SAAtBC,MACOC,EAAaN,EAAKO,YAAzBF,MAER,OACE,kBAAC,IAAD,KACE,wBAAIG,UAAU,6DAAd,YAGCF,EAASG,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACZ,kBAAC,IAAD,CAAMC,IAAKF,EAAQG,GAAIC,GAAIJ,EAAQK,OAAOC,MACxC,yBAAKR,UAAU,SACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,CACEA,UAAU,MACVS,SAAU,CAAEC,UAAW,QACvBC,MAAOT,EAAQU,YAAYC,OAAO,GAAGC,gBAAgBH,SAIzD,wBAAIX,UAAU,8EACXE,EAAQU,YAAYG,OAEvB,yBAAKf,UAAU,6BACZE,EAAQU,YAAYI,gBAM7B,wBAAIhB,UAAU,6DAAd,gBAIA,4BACGL,EAAMM,KAAI,gBAASgB,EAAT,EAAGd,KAAH,OACT,wBAAIC,IAAKa,EAAKZ,IACZ,kBAAC,IAAD,CAAMC,GAAIW,EAAKV,OAAOC,MACpB,yBAAKR,UAAU,gCACb,0BAAMA,UAAU,wDACbiB,EAAKL,YAAYM,MAEpB,wBAAIlB,UAAU,cAAciB,EAAKL,YAAYG,eAU7DtB,QAAQC,IAAI,QACL,IAAMyB,EAAY","file":"component---src-pages-index-tsx-2413427e3e7152d848df.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { Layout } from \"../components/Layout\";\nimport Img from \"gatsby-image\";\n\nexport default function Home({ data }) {\n  console.log(data);\n  const { edges: posts } = data.allPosts;\n  const { edges: projects } = data.allProjects;\n\n  return (\n    <Layout>\n      <h1 className=\"text-3xl border-b border-gray-300 mb-5 pb-1 text-gray-800\">\n        Projects\n      </h1>\n      {projects.map(({ node: project }) => (\n        <Link key={project.id} to={project.fields.slug}>\n          <div className=\"mb-10\">\n            <div className=\"h-6\">\n              <Img\n                className=\"h-6\"\n                imgStyle={{ objectFit: \"none\" }}\n                fluid={project.frontmatter.images[0].childImageSharp.fluid}\n                // fixed={project.frontmatter.images[0].childImageSharp.fixed}\n              />\n            </div>\n            <h2 className=\"text-center text-4xl leading-tight font-semibold group-hover:text-gray-600\">\n              {project.frontmatter.title}\n            </h2>\n            <div className=\"text-center text-gray-600\">\n              {project.frontmatter.startDate}\n            </div>\n          </div>\n        </Link>\n      ))}\n\n      <h1 className=\"text-3xl border-b border-gray-300 mb-5 pb-1 text-gray-800\">\n        Explorations\n      </h1>\n\n      <ul>\n        {posts.map(({ node: post }) => (\n          <li key={post.id}>\n            <Link to={post.fields.slug}>\n              <div className=\"flex flex-row items-baseline\">\n                <span className=\"text-gray-600 font-hairline text-sm text-right w-1/5\">\n                  {post.frontmatter.date}\n                </span>\n                <h2 className=\"w-4/5 ml-3\">{post.frontmatter.title}</h2>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n}\n\nconsole.log(\"dave\");\nexport const pageQuery = graphql`\n  query {\n    allPosts: allMdx(\n      filter: {\n        fields: { collection: { eq: \"posts\" } }\n        frontmatter: { published: { eq: true } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            collection\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM YYYY\")\n          }\n        }\n      }\n    }\n\n    allProjects: allMdx(\n      filter: { fields: { collection: { eq: \"projects\" } } }\n      sort: { fields: [frontmatter___startDate], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            collection\n            slug\n          }\n          frontmatter {\n            title\n            startDate(formatString: \"MMMM YYYY\")\n            images {\n              childImageSharp {\n                fluid(cropFocus: ENTROPY) {\n                  ...GatsbyImageSharpFluid\n                }\n                fixed(width: 1000) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}