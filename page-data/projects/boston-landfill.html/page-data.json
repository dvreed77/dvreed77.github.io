{"componentChunkName":"component---src-templates-project-js","path":"/projects/boston-landfill.html","result":{"data":{"markdownRemark":{"id":"0191806e-881e-5462-8308-58e24b3bab1a","html":"<p>This is a project I became interested in a long time ago.  I have been in Boston for over 12 years, and knew that Boston was built over time from a series of landfill projects.  I was interested in creating an app that allowed a user to scrub through time and see what parts of Boston were changed and when.  </p>\n<p>After a little bit of digging, I found this dataset <a href=\"http://www.bc.edu/bc_org/avp/cas/fnart/fa267/sequence.html\">here</a>, an extremely poor quality GIF.  I probably could have emailed the professor for something of higher quality, but since I am always up for a challenge, I wanted to use this to practice a variety of skills:</p>\n<ul>\n<li>Understand GIFs in Python</li>\n<li>Some basic image processing: dilation/erosion, thresholding, smoothing, etc.</li>\n<li>Extract contours/shapes from an image</li>\n<li>Shape manipulations: merging, intersection</li>\n<li>SVG creation</li>\n<li>GeoJSON creation</li>\n<li>Interactive React App with GeoJSON objects</li>\n<li>React App for timelines, and other Interactive elements</li>\n</ul>\n<h2 id=\"data\" style=\"position:relative;\"><a href=\"#data\" aria-label=\"data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data</h2>\n<p>Original data was sourced here, a GIF image: <a href=\"http://www.bc.edu/bc_org/avp/cas/fnart/fa267/sequence.html\">http://www.bc.edu/bc_org/avp/cas/fnart/fa267/sequence.html</a></p>\n<h2 id=\"key-lessons-learned\" style=\"position:relative;\"><a href=\"#key-lessons-learned\" aria-label=\"key lessons learned permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Key Lessons Learned</h2>\n<h3 id=\"read-gif-in-python\" style=\"position:relative;\"><a href=\"#read-gif-in-python\" aria-label=\"read gif in python permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Read GIF in Python</h3>\n<p>A colored GIF is just a <code class=\"language-text\">F x M x N x C</code> tensor, where <code class=\"language-text\">F</code> is the number of frames, <code class=\"language-text\">M</code> and <code class=\"language-text\">N</code> are the height and width, and <code class=\"language-text\">C=3</code> are the 3 RGB channels.</p>\n<p>Easy to read image (and make Greyscale):</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> skimage<span class=\"token punctuation\">.</span>io <span class=\"token keyword\">import</span> imread\n<span class=\"token keyword\">from</span> skimage<span class=\"token punctuation\">.</span>color <span class=\"token keyword\">import</span> rgb2gray\n\nimage <span class=\"token operator\">=</span> rgb2gray<span class=\"token punctuation\">(</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">'img.gif'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"basic-image-processing\" style=\"position:relative;\"><a href=\"#basic-image-processing\" aria-label=\"basic image processing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Image Processing</h3>\n<h4 id=\"resizing\" style=\"position:relative;\"><a href=\"#resizing\" aria-label=\"resizing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Resizing</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> skimage<span class=\"token punctuation\">.</span>transform <span class=\"token keyword\">import</span> resize <span class=\"token keyword\">as</span> resize_image\n\nimage <span class=\"token operator\">=</span> resize_image<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"slight-blur\" style=\"position:relative;\"><a href=\"#slight-blur\" aria-label=\"slight blur permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Slight blur</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> skimage<span class=\"token punctuation\">.</span>filters <span class=\"token keyword\">import</span> gaussian\n\nimage <span class=\"token operator\">=</span> gaussian<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"thresholding\" style=\"position:relative;\"><a href=\"#thresholding\" aria-label=\"thresholding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Thresholding</h4>\n<p>I used <code class=\"language-text\">threshold_minimum</code> which is described as: The histogram of the input image is computed and smoothed until there are only two maxima. Then the minimum in between is the threshold value.</p>\n<p>It is described in more detail <a href=\"http://scikit-image.org/docs/dev/auto_examples/xx_applications/plot_thresholding.html#bimodal-histogram\">here</a></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">threshold <span class=\"token operator\">=</span> threshold_minimum<span class=\"token punctuation\">(</span>rimage<span class=\"token punctuation\">)</span>\n\nbinary <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>image <span class=\"token operator\">></span> threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># binary = binary_dilation(binary)</span>\n\n  <span class=\"token keyword\">return</span> binary</code></pre></div>\n<h4 id=\"erosiondilation\" style=\"position:relative;\"><a href=\"#erosiondilation\" aria-label=\"erosiondilation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Erosion/Dilation</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> skimage<span class=\"token punctuation\">.</span>morphology <span class=\"token keyword\">import</span> binary_dilation<span class=\"token punctuation\">,</span> binary_erosion\n\nimage <span class=\"token operator\">=</span> binary_dilation<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"get-contours-from-image\" style=\"position:relative;\"><a href=\"#get-contours-from-image\" aria-label=\"get contours from image permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Get contours from image</h3>\n<p>This creates contours where image = 0. Since we created a binary image with thresholding, this is easy.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> skimage <span class=\"token keyword\">import</span> measure\n\ncontours <span class=\"token operator\">=</span> measure<span class=\"token punctuation\">.</span>find_contours<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"contour-to-shapes\" style=\"position:relative;\"><a href=\"#contour-to-shapes\" aria-label=\"contour to shapes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Contour to Shapes</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> shapely<span class=\"token punctuation\">.</span>geometry <span class=\"token keyword\">import</span> Polygon\n\npolygon <span class=\"token operator\">=</span> Polygon<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"simplify-shapes\" style=\"position:relative;\"><a href=\"#simplify-shapes\" aria-label=\"simplify shapes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simplify shapes</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">p <span class=\"token operator\">=</span> polygon<span class=\"token punctuation\">.</span>simplify<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> preserve_topology<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"convert-contours-to-svg\" style=\"position:relative;\"><a href=\"#convert-contours-to-svg\" aria-label=\"convert contours to svg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Convert contours to SVG</h3>\n<p>In order to convert Shapely shapes to SVG, I manually built my own SVG path elements, similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">path <span class=\"token operator\">=</span> svgwrite<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\next_points <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span>exterior<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">)</span>\n\nP <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>ext_points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>ext_points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> ext_points<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Z'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> P<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> interior <span class=\"token keyword\">in</span> shape<span class=\"token punctuation\">.</span>interiors<span class=\"token punctuation\">:</span>\n    int_points <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>interior<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">)</span>\n\n    P <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>int_points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>int_points<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> int_points<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Z'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> P<span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"convert-svg-to-polygons\" style=\"position:relative;\"><a href=\"#convert-svg-to-polygons\" aria-label=\"convert svg to polygons permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Convert SVG to Polygons</h3>\n<p>In order to convert Shapely shapes to SVG, I manually built my own SVG path elements, similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> shapely<span class=\"token punctuation\">.</span>geometry <span class=\"token keyword\">import</span> Polygon<span class=\"token punctuation\">,</span> MultiPolygon\n<span class=\"token keyword\">from</span> xml<span class=\"token punctuation\">.</span>dom <span class=\"token keyword\">import</span> minidom<span class=\"token punctuation\">,</span> Node\n<span class=\"token keyword\">from</span> svg<span class=\"token punctuation\">.</span>path <span class=\"token keyword\">import</span> parse_path <span class=\"token keyword\">as</span> parse_svg_path\n\nsvg_doc <span class=\"token operator\">=</span> minidom<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">(</span><span class=\"token string\">\"data/svg_out.svg\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">parse_path</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    points <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">.</span>real<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">.</span>imag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parse_svg_path<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>getAttribute<span class=\"token punctuation\">(</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> points\n\npoints <span class=\"token operator\">=</span> parse_path<span class=\"token punctuation\">(</span>svg_doc<span class=\"token punctuation\">.</span>getElementsByTagName<span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nPolygon<span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"convert-polygons-to-geojson\" style=\"position:relative;\"><a href=\"#convert-polygons-to-geojson\" aria-label=\"convert polygons to geojson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Convert Polygons to GeoJSON</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> shapely<span class=\"token punctuation\">.</span>geometry <span class=\"token keyword\">import</span> mapping\n<span class=\"token keyword\">import</span> json\n\nout <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"FeatureCollection\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"features\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Feature\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"properties\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"layer\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"region\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"logan_airport\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"geometry\"</span><span class=\"token punctuation\">:</span> mapping<span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>        \n<span class=\"token punctuation\">}</span>\n\njson<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test.geojson'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Boston Landfill","startDate":"6 October, 2017","endDate":"23 October, 2017","repoURL":"https://github.com/dvreed77/boston_landfill","projectURL":"https://dvreed77.github.io/boston_landfill/","images":[{"id":"076fda51-d8f7-5309-b819-bdef8be818a8","publicURL":"/static/boston-landfill-60905d0ced07df3d6eecfa2ea1ea9220.png","childImageSharp":{"id":"d764de51-8089-5c6d-91df-4b2f12755eed","fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='1000'%20height='500'%3e%3crect%20width='100%25'%20height='100%25'%20fill='%23EDEEF0'/%3e%3cpath%20d='M484%2023v22h66V0h-66v23m143-8v16h-3c-2%200-3-1-3-8%200-6%200-7-2-7s-2%201-2%207c0%209%201%2011%206%2011h4v72H314a18521%2018521%200%2000-285%202c24%200%2028%200%2028%202h3a1045%201045%200%2001122%200%201012%201012%200%2001121-1l60-1c53%200%2060%200%2060%202l1%201%201-1a1045%201045%200%2001122%200c0-2%205-2%2040-2h40v24c0%2023%200%2024%202%2024s2-1%202-24v-24h17c15%200%2018%200%2018%202h3a955%20955%200%2001121%200%20958%20958%200%2001122%200c0-2%206-2%2044-2l45-1-185-1H631V61c0-62%200-61-2-61s-2%201-2%2015m-28%206v13h6c7%200%209-2%209-10%200-6-2-8-8-8-4%200-4%200-4-3l-2-4-1%2012m63-10c-1%206%200%2022%202%2023%202%200%202-1%202-5l1-4%205-1c8%200%2012-8%206-13-4-3-15-3-16%200m52%2010l1%2013c1%200%202-1%202-4%201-5%202-5%205%200%201%203%203%204%204%204%203%200%203-1-1-6l-3-5%203-4%203-3h-2c-2%200-4%201-5%203-4%204-4%204-4-3%200-4-1-6-2-7l-1%2012m-162%202c0%2010%201%2011%209%2011h6v-9l-1-9c-2%200-2%201-2%205%200%207-2%2010-5%2010-2%200-3-1-3-8%200-6%200-7-2-7s-2%201-2%207m20-6c-1%205%200%2017%201%2017s2-2%202-6c0-12%206-12%207-1%200%209%202%209%203%200%201-11%207-11%207%201%200%205%200%206%202%206l1-7c0-11%200-11-12-11l-11%201m64%201c-2%204%200%207%206%208%204%201%205%203%202%205-2%201-3%201-5-1s-4-3-4%200%202%204%207%204%207-1%207-5c0-3-1-4-6-6-5-1-5-4-1-4l4%201h3c0-4-11-6-13-2m50%200c-3%203-1%205%202%203%202-2%206-2%207%200l-1%201-6%202c-4%201-4%201-4%205l1%205h15l-1-6c-1-10-2-11-7-12-4%200-5%200-6%202m12%2058v13h8l8-1c0-2-3-3-8-3h-3l-1-10c0-9-1-11-2-11-2%200-2%201-2%2012m109-11l-3%207a229%20229%200%2001-6%2017c0%202%204-1%205-4%202-3%202-3%206-3s5%201%205%204c1%202%202%203%204%203s2%200%201-3a247%20247%200%2000-6-17c-2-4-5-7-6-4m82%203c-1%203-2%203-9%203h-3v9c0%208%200%209%202%209s2-1%202-6c0-6%200-7%202-8%205-2%206-1%206%207l1%207h3c3%200%204-1%201-3-2-1-2-2-2-6s0-5%202-6l2-2-2-1-2-3c0-3-3-3-3%200m-170%203c-3%201-4%204-4%209%200%2014%2016%2013%2016%200%200-7-5-12-12-9m39%200c-3%200-5%202-5%204s2%203%204%201%206-2%206-1c1%201%200%202-4%203-6%201-7%203-7%206%200%204%204%207%208%205h6c3%200%204-2%202-3l-1-7c0-7-3-10-9-8m18%200h-4v9c0%208%200%209%202%209%201%200%202-2%202-7%201-12%207-11%207%201%200%205%200%206%202%206%203%200%203-14-1-17l-3-2-5%201m71%200h-18v9c0%208%200%209%202%209s2-1%202-6c0-6%202-9%205-9%202%200%202%201%202%2011s0%2011%202%2011l1-4c0-2%201-2%203-2%2010%201%2014-16%205-19h-4m15%200c-6%203-7%2015%200%2018s12-1%2012-9-5-12-12-9m-126%202c-2%201-2%204-2%207%200%206%202%209%207%209l4%201c0%203-4%203-7%201h-4c-1%203%202%205%207%205%207%200%208-1%208-14V71h-6c-4%200-6%200-7%202M30%20125l-3%202c-4%201-4%204%200%204%202%200%203%201%203%209%200%206%201%208%202%208%202%200%203-23%201-24-1-1-2%200-3%201m15-1c-2%201-3%202-3%207l-1%209c0%205%203%208%209%208s7-2%207-12c0-8-1-9-3-11-3-2-5-2-9-1m19%200c-2%200-4%204-4%207%201%202%203%202%204-1%202-3%205-4%207-2%202%203%200%205-5%209-5%203-8%207-7%2010%201%202%2016%201%2017-1%200-2-1-2-6-2-7%200-7-1-2-4%206-4%208-6%208-10%200-5-5-8-12-6m19%200c-6%203-7%2017-2%2023%203%202%208%201%2011-1%203-4%203-17%200-20-2-3-6-3-9-2m84%200c-3%201-5%205-3%209v3c-2%201-2%208%201%2010%203%203%209%203%2012%200%202-2%203-9%201-11v-3c3-5-4-11-11-8m22%203c-9%2011-10%2015-3%2015%205%200%205%200%205%203%201%203%203%203%204%200l2-4c3%200%203-2%200-2-2-1-2-2-2-8-1-9-2-9-6-4m16-3c-4%201-5%204-5%2012%200%209%202%2012%208%2012s9-5%208-16c0-6-6-10-11-8m84%200c-3%201-6%208-3%209%201%201%200%202-1%204-2%203-1%208%202%2010s9%201%2012-1c2-3%203-8%201-10v-4l-1-6c-2-2-7-3-10-2m19%200c-4%202-6%2012-4%2019%203%208%2016%206%2016-3%200-6-2-8-9-8h-4l2-3%203-3%202%202c3%203%205%203%205%200%200-4-6-6-11-4m18%200c-5%202-7%2017-2%2021%205%206%2012%203%2014-5%202-11-4-19-12-16m85%200c-3%201-6%208-3%209l-1%204c-4%208%207%2015%2014%209%202-2%203-8%201-9v-6l-1-6c-2-1-8-2-10-1m18%200c-3%201-5%205-3%209v3c-2%201-1%209%201%2010%206%205%2014%201%2014-5l-1-5v-3c3-6-4-12-11-9m19%200c-7%203-6%2023%202%2024%206%201%2010-4%2010-12%200-5-3-12-4-12h-8m84%200c-4%202-5%209-2%2013%201%202%203%202%206%202%204%200%205%201%203%204-2%202-6%201-7-1s-4-1-3%202c2%206%2011%206%2014%200%202-4%201-15-1-18-2-2-7-3-10-2m19%200c-5%202-7%2017-2%2021%205%206%2012%203%2014-5%202-11-4-19-12-16m19%200c-6%203-7%2017-1%2023%202%202%207%201%2010-1%203-4%204-16%201-20-2-2-7-3-10-2m69%201l-3%202c-4%201-3%203%200%204h3v9c0%207%200%208%202%208%201%200%202-2%202-12%200-12-1-14-4-11m16-1c-4%201-5%203-5%208s3%207%208%207c4%200%205%201%203%204h-7c0-3-4-2-4%200%200%204%208%207%2012%204%204-4%206-16%202-21-2-2-6-3-9-2m18%200c-2%201-5%205-4%207%201%203%203%202%204-1%202-3%205-4%207-2%202%203%200%205-4%208-5%203-7%205-7%209v3h7c7%200%209-1%209-2%200-2-1-2-5-2-7%200-8-2-3-4%208-5%2010-10%206-15-3-2-6-3-10-1m19%200c-5%201-7%2015-3%2021%203%204%209%204%2011%201%204-4%204-17%201-21-2-1-6-2-9-1m69%201l-3%202c-4%201-4%204-1%204s3%200%203%208c0%207%201%209%202%209%202%200%202-1%202-12%200-12-1-15-3-11m15-1c-3%200-4%204-4%2010%200%203%205%207%208%205%203-1%204%201%203%203-2%202-7%203-7%201-1-3-4-2-4%200%200%205%2010%207%2013%202%203-4%203-16%200-19-2-2-6-3-9-2m24%200c-2%201-10%2014-10%2016%200%201%202%202%205%202%204%200%205%200%205%203%201%203%203%203%204%200l2-4v-2c-1-1-2-3-2-8%200-7-1-9-4-7m13%200c-7%203-6%2023%202%2024%206%201%2010-4%2010-12%200-5-3-12-4-12h-8m70%200l-1%202-2%201c-2%200-3%201-3%202l2%202c3%200%203%200%203%208%200%207%201%209%202%209s2-3%202-12c0-11%200-13-3-12m14%201c-6%205-3%2015%204%2014%204%200%204%201%203%203%200%202-4%202-6%201-2-3-4-2-4%200%200%205%209%207%2013%202%203-4%204-15%201-19-3-3-8-3-11-1m20-1c-5%202-7%2016-3%2021%208%208%2019-2%2013-10-2-3-3-3-7-3-5%200-5-1-2-4l3-2%202%202c4%204%207%202%204-2-2-2-7-3-10-2m18%200c-5%203-6%2015-2%2021%203%204%2010%204%2013-1%202-4%201-16-1-18s-7-3-10-2m-783%201l-3%202c-3%201-3%203%200%204h3v9c0%207%200%208%202%208%203-1%203-24%200-24l-2%201m121%200l-2%202c-4%201-4%204-1%204s3%200%203%208c0%207%201%209%202%209%202%200%202-1%202-12l-1-12-3%201m122%200l-2%202c-4%201-4%204-1%204s3%200%203%208c0%207%201%209%202%209%202%200%202-1%202-12s0-12-2-12l-2%201m122%200l-3%202c-3%201-3%203%200%204h3v9c0%207%200%208%202%208%203-1%203-24%200-24l-2%201m-433%204c-2%202-3%2010-1%2013%203%206%209-1%208-9-2-6-4-8-7-4m121%200c-2%203-1%2013%201%2014h4c2-1%203-12%201-15-2-2-5-1-6%201m122%200c-1%201-2%2010%200%2013%200%202%204%203%206%200l1-6c0-8-4-11-7-7m122%201c-3%206-2%2014%203%2014%203%200%204-3%204-8%200-9-4-12-7-6m103-1c-1%201-2%2010%200%2013%200%202%204%203%206%200l1-6c0-8-4-11-7-7m19%200c-4%204-2%2015%203%2015%202%200%203-1%204-7%200-8-4-12-7-8m122%200c-3%202-3%2012-1%2014%204%203%208-2%208-9-1-7-4-9-7-5m121%201c-3%206-2%2014%203%2014%203%200%204-3%204-8%200-9-4-12-7-6m122%200c-3%206-2%2014%203%2014%203%200%204-3%204-8%200-9-4-12-7-6m-765%2078H0v292h153l-1-6c-1-6-3-9-8-12-3-1-30-3-36-2-5%200-7-1-18-10-13-9-11-17%203-16%206%200%208%201%2019%2010%206%205%2012%205%2014-1%203-5%204-5%2015-1%207%202%2010%203%2014%206%207%206%208%207%2019%209%2013%203%2017%205%2029%2017l6%206h47c46%200%2048-1%2051-2%209-7%2015-22%2015-38l1-9c2-4%202-15%200-22-1-3-2-6-6-9l-4-4-2%202c-3%204-5%204-8-2-5-7-10-10-25-11s-20-4-21-12c-1-6%205-10%208-4%201%202%202%202%205%202l7%202h5l8-2c8%200%208%200%2015-11s8-12%2012-12l9-3%206-4c2%200%203-2%207-8l6-7%202-2%207%202c8%202%2012%206%2019%2017%203%205%204%206%204%2012%200%209%201%2011%2010%2018%2012%209%2013%2020%204%2024-7%203-4%209%208%2018%2010%207%2016%2010%2023%2011%209%202%2010%205%207%2020%200%204%201%205%205%206%201%201%203%200%207-4%205-4%205-4%2011-4%2015-1%2013%2015-4%2023-3%201-6%203-7%205-4%203-16%204-19%201-6-5-13-3-16%204l-1%203h175v-3c1-5%201-6-3-13-7-10-8-16-3-18%208-1%2017-2%2020%200s4%201%207-1c3-4%206-4%206%200l-5%208c-9%209-10%2011-8%2015l2%204c5%203%2014-2%2021-11l4-7h5c11%202%2013%202%2014%201l7-13c0-1%202-2%207-2%202%200%205%202%2016%2012l13%2013-1%203c-2%202-5%204-6%202l-7-6a532%20532%200%2001-15-12c-3-2-4-2-8%203l-3%204%203%203%205%204c2%200%203%201%203%203v2l6%205v2c1%202%202%202%20114%202h113l1-6%201-5%2011-1%2015-1c3-1%204-1%206%204l2%207%201%202%203-2c6-3%2012-3%2016%200%204%202%205%202%2015%200h9c6%201%207%200%207-3%200-8%2010-8%2013-1%202%205%205%205%209%204%204-2%204-2%204%200%201%201%201-64%201-144V208H171m144%202l3%2021a315%20315%200%200013%2041%20511%20511%200%200022%2060c1%203%202%204%206%206l9%205c5%202%206%202%2025%203%2024%200%2026%200%2039%209l12%207c3%200%209%203%2012%205l9%205%2013%209c12%2011%2020%2016%2042%2025a693%20693%200%200141%2018c9%201%2010%201%2016%2011%206%209%209%2011%2013%2010%203-1%203-3%201-11-4-11-4-15%201-19%206-3%2013-4%2024-2%209%201%2011%203%2018%209%205%204%208%205%2019%206%209%201%2010%201%2012%204%203%204%2016%2017%2018%2017s2-12-1-25c-3-14-3-13-19-16a773%20773%200%2001-23-5%20408%20408%200%2001-51-11%20215%20215%200%2001-28-5c-6-1-9-3-15-8-3-3-3-4%200-7%203-2%2021-1%2036%202a7276%207276%200%200054%2013l42%2012c7%202%208%202%2010-2%201-5%202-23%201-25l-13-2c-12%200-16-2-17-5%200-2%201-2%204-2h22l-1-5-1-6-1-3-4-6-3-6c1-3-1-4-4-2-1%201-2%201-7-2-12-8-31-12-60-14-22-2-23-2-24-4%200-2-9-3-11-1h-20l-5%201-7%2012c-9%2017-8%2017-14%2013l-5-4%205-11%205-10c-2-3-5%200-9%208-7%2014-11%2016-19%2013l-3-1%202-3%202-7%204-9%203-5h6c6%201%206%200%203-3-3-2-4-2-11-2h-10l-12%2024-11%2022h-4c-5-1-5-1-2-11l2-12%204-7%206-12c0-4-4-6-12-7l-14-2c-7-2-12-2-29%200-12%200-16%200-24-4-3-2-3-3-5-11-1-7-9-16-20-22-4-1-4-2-3-5l1-4%202-4%202-7a206%20206%200%20006-13v-5c-2-1-2-2-8%2012-6%2016-8%2020-9%2020-4-2-17-22-22-38-5-11-4-11-17-11l-12%201m163%206l-6%207c-3%203-3%204-3%2010%201%208%201%208%206%206s7-4%209-9c3-9%206-10%2010-2%201%204%203%204%203%201%202-7-5-17-12-17-4%200-5%200-7%204m-49%208l-9%202c-3%200-6%203-4%203l10%202a186%20186%200%200129%206c2%200-5-9-9-12s-7-4-17-1m558%2057c-12%2013-15%2016-13%2016l8-4%201-1c1%200%2011-7%2014-11%203-2%203-3%203-7v-5l-13%2012m3%2031l-31%2020c-6%204-10%2010-10%2015%200%202-3%204-10%204-6%200-7-1-7-5l-2-6-3-5c0-3-7-3-12%200-8%205-17%2017-20%2027-2%208-2%2011%202%2012l8%202c4%201%206%203%2016%2010%203%202%204%202%2013%201%209%200%2010%200%2016%203%208%203%2013%204%2019%202%205-1%208-4%206-7-1-2-1-4%205-10%204-4%205-8%207-15%200-4%201-6%207-11l6-6v-39l-10%208m-73%20122a178%20178%200%20000%2045c-1%202%201%203%203%200l11-2a664%20664%200%200021%201h4l6%201%204%204%205%203c0%202%206%201%206%200l-4-4-3-5h14c14%200%2016-1%2016-5%200-3%200-3-2-1-4%204-14%203-18-1-2-2-3-5-1-7l5%202c0%203%206%205%209%203%204-3%200-6-8-8-8-1-9-10-2-14%206-4%2016%200%2016%206%200%203-2%203-5%201-3-3-6-4-9-2s5%206%2010%206l2%201%202%201c1%201%201%200%201-7v-8l-3-1c-9-1-15%200-17%202-3%202-4%203-6%200-4-4-17-4-22%201-2%203-3%203-13%202-11-1-12-2-1-3%2012%200%2012%200%2012-6v-5l-16-1-17%201m4%202l-1%2019v18h13c14%200%2016%200%2014-4%200-2-1-2-11-2h-10v-11h10c10%200%2010%200%2010-2%200-4-2-4-12-4h-8v-9h11c11%200%2013-1%2010-5-1-1-25-2-26%200m38%209c-4%200-7%205-7%207%201%203%205%204%206%201%201-4%2010-4%2010%200%200%201-1%202-6%203-9%202-11%204-11%2010%201%202%201%205%203%206h15l5%201c3%200%204-3%202-4s-2-3-2-10c0-9%200-10-2-12-3-2-9-3-13-2m-67%2046l-1%205c0%204%200%204%203%204%202%200%203-1%203-2%201-2%202-2%207-2s6%200%207%202c2%203%207%203%207%200s-3-6-7-7h-19'%20fill='%23FCCB0A'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":2,"src":"/static/60905d0ced07df3d6eecfa2ea1ea9220/fe2b8/boston-landfill.png","srcSet":"/static/60905d0ced07df3d6eecfa2ea1ea9220/523be/boston-landfill.png 250w,\n/static/60905d0ced07df3d6eecfa2ea1ea9220/c93ac/boston-landfill.png 500w,\n/static/60905d0ced07df3d6eecfa2ea1ea9220/fe2b8/boston-landfill.png 600w","sizes":"(max-width: 600px) 100vw, 600px"}}}]},"fields":{"path":"projects/boston-landfill.md","slug":"/projects/boston-landfill.html"}}},"pageContext":{"slug":"/projects/boston-landfill.html"}}}