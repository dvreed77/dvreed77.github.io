{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["react_helmet__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","n","TitleAndMetaTags","_ref","title","ogUrl","ogDescription","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","property","content","pageQuery","__webpack_exports__","default","_ref2","data","location","console","log","markdownRemark","dangerouslySetInnerHTML","__html","html"],"mappings":"kKAAAA,EAAAC,EAAA,KAAAC,EAAAD,EAAAE,EAAAH,GAaMI,EAAmB,SAAAC,GAAmC,IAAjCC,EAAiCD,EAAjCC,MAAsBC,GAAWF,EAA1BG,cAA0BH,EAAXE,OAC/C,OACEE,EAAAC,EAAAC,cAACT,EAAAQ,GAAOJ,MAAOA,GACbG,EAAAC,EAAAC,cAAA,QAAMC,SAAS,WAAWC,QAASP,IACnCG,EAAAC,EAAAC,cAAA,QAAMC,SAAS,UAAUC,QAAQ,YAChCN,GAASE,EAAAC,EAAAC,cAAA,QAAMC,SAAS,SAASC,QAASN,IAC3CE,EAAAC,EAAAC,cAAA,QAAMC,SAAS,WAAWC,QAAQ,iBAClCJ,EAAAC,EAAAC,cAAA,QAAMC,SAAS,YAAYC,QAAQ,sBAgD5BC,eAiCbC,EAAAC,QA5Da,SAAAC,GAAsB,IAApBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,SACnBC,QAAQC,IAAI,YAAaH,EAAMC,GAE/B,IAAMG,EAAiBJ,EAAKI,eAC5B,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACP,GACCI,cAAe,OACfD,MAAO,OACPD,MAAO,SAGTG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEY,yBAA0BC,OAAQF,EAAeG,SATvD","file":"component---src-templates-blog-js-573233d97cffc399020d.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * @emails react-core\n */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n// import MarkdownPage from 'components/MarkdownPage';\n// import {createLinkBlog} from 'utils/createLink';\nimport Helmet from 'react-helmet';\n\n\nconst TitleAndMetaTags = ({title, ogDescription, ogUrl}) => {\n  return (\n    <Helmet title={title}>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:type\" content=\"website\" />\n      {ogUrl && <meta property=\"og:url\" content={ogUrl} />}\n      <meta property=\"og:image\" content=\"/logo-og.png\" />\n      <meta property=\"fb:app_id\" content=\"623268441017527\" />\n    </Helmet>\n  );\n};\n\n\n// const toSectionList = allMarkdownRemark => [\n//   {\n//     title: 'Recent Posts',\n//     items: allMarkdownRemark.edges\n//       .map(({node}) => ({\n//         id: node.fields.slug,\n//         title: node.frontmatter.title,\n//       }))\n//       .concat({\n//         id: '/blog/all.html',\n//         title: 'All posts ...',\n//       }),\n//   },\n// ];\n\nconst Blog = ({data, location}) => {\n  console.log('Blog Data', data, location)\n\n  const markdownRemark = data.markdownRemark\n  return (\n    <div>\n      <TitleAndMetaTags\n        ogDescription={\"dave\"}\n        ogUrl={\"dave\"}\n        title={\"Blog\"}\n      />\n\n      <div>\n        <div\n          dangerouslySetInnerHTML={{__html: markdownRemark.html}}\n        />\n      </div>\n      Blog\n    </div>\n  )\n}\n\n// Blog.propTypes = {\n//   data: PropTypes.object.isRequired,\n// };\n\n// eslint-disable-next-line no-undef\nexport const pageQuery = graphql`\n  query TemplateBlogMarkdown($slug: String!) {\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      html\n      excerpt(pruneLength: 500)\n      frontmatter {\n        title\n      }\n      fields {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        slug\n      }\n    }\n    allMarkdownRemark(\n      limit: 10\n      filter: {id: {regex: \"/blog/\"}}\n      sort: {fields: [fields___date], order: DESC}\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n"],"sourceRoot":""}